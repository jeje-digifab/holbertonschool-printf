.\" Manpage for _printf.
.TH _printf 3 "27 March 2024" "1.0" "_printf man page"

.SH NAME
_printf \- formatted output conversion

.SH SYNOPSIS
int _printf(const char *format, ...);

.SH DESCRIPTION
The _printf() function is a custom implementation of the standard 
printf() function in C. It provides similar functionality to the 
original printf() function but with a limited set of conversion 
specifiers.

The _printf() function writes output to the standard output stream 
(stdout) according to a format string, which is composed of zero or 
more directives. Each directive is a sequence of characters that 
starts with a percent sign (%) and is followed by a conversion 
specifier, which determines the type of argument to be printed.

The _printf() function supports the following conversion specifiers:
.TP
.B c
Print a single character.

.TP
.B s
Print a string of characters.

.TP
.B %
Print a literal percent sign (no argument is consumed).

.TP
.B d i
Print a signed decimal integer. The 'd' specifier is used to convert an
 'int' argument, while the 'i' specifier is used to convert an argument
 of any integer type (e.g., 'short', 'int', 'long', etc.). In practice,
 the 'd' and 'i' specifiers are equivalent for most applications.


Note that the _printf() function does not reproduce the buffer handling
 of the C library printf() function, and it does not support flag 
 characters, field width, precision, or length modifiers.

.SH BUGS
No known bugs.

.SH AUTHORS
Emmanuel Meynetgauthier <8690@holbertonstudents.com>
.br
Esteban Guillen <7281@holbertonstudents.com>
.br
Jérôme Romand <8757@holbertonstudents.com>
